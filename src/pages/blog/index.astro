---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
  [year: string]: {
    [month: string]: CollectionEntry<"blog">[];
  };
};

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  const month = post.data.date.toLocaleString("default", { month: "long" });
  if (!acc[year]) {
    acc[year] = {};
  }
  if (!acc[year][month]) {
    acc[year][month] = [];
  }
  acc[year][month].push(post);
  return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">Blog</div>
      <div class="space-y-4">
        {
          years.map((year) => (
            <section class="animate space-y-4">
              <div class="font-semibold text-black dark:text-white">{year}</div>
              <div class="space-y-2">
                {Object.keys(posts[year]).map((month) => (
                  <div class="space-y-2">
                    <div class="font-medium text-gray-700 dark:text-gray-300 pl-2">
                      {month}
                    </div>
                    <ul class="flex flex-col gap-4 pl-4">
                      {posts[year][month].map((post) => (
                        <li>
                          <ArrowCard entry={post} />
                        </li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>
            </section>
          ))
        }
      </div>
    </div>
  </Container>
</PageLayout>
